<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Shibuya.rb | SCRABBLE&#9734;NOTE]]></title>
  <link href="http://fakestarbaby.github.io/blog/categories/shibuya-dot-rb/atom.xml" rel="self"/>
  <link href="http://fakestarbaby.github.io/"/>
  <updated>2013-06-01T02:57:39+09:00</updated>
  <id>http://fakestarbaby.github.io/</id>
  <author>
    <name><![CDATA[fakestarbaby]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shibuya.rbに初参加したよ！]]></title>
    <link href="http://fakestarbaby.github.io/blog/2012/02/16/shibuyarb/"/>
    <updated>2012-02-16T21:34:00+09:00</updated>
    <id>http://fakestarbaby.github.io/blog/2012/02/16/shibuyarb</id>
    <content type="html"><![CDATA[<p>2012/02/15(水)に VOYAGE GROUP さんで開催された、Shibuya.rb に初参加した。</p>

<h2>ソースコードリーディング</h2>

<p>今回は Rack ミドルウェアのソースコードリーディングというテーマで。おっと、そもそも、Rack について詳しく知らないなーって思って、基礎知識は学習した上で望んだ。</p>

<!-- more -->


<h2>Chanko</h2>

<p>クックパッドさんが提供している <a href="https://github.com/cookpad/chanko">Chanko</a> のソースコードを読むチームへ参加した。Chanko は新機能を既存コードから出来るだけ切り離した状態で、本番環境にてユーザーのロールによって有効化、無効化を簡単に制御出来る。本番環境で試せるってのはメリットあるなと思う。</p>

<p>チーム内には、そもそも、Chanko がどういったモノなのか理解している人が居なかったので、まずは、Chanko を利用して作られている <a href="https://github.com/cookpad/chanko_sample">サンプル</a> を動かしてみよう！って事になった。</p>

<p>で、皆でローカルへ持ってきて動かしてみたんだけど、なんかログがダーっ！とスゴイ勢いで流れて不穏な雰囲気。でも、なんとなく画面は表示された。Chanko の README を読めば分かるが、active_if というメソッド内で機能の有効化、無効化が出来る。このサンプルではデフォルトで true になっている為、機能が有効になるじはずだが、これが何故か有効にならない。どうも Rails のバージョンが3.2なのがマズイらしく、3.1に落として実行すると正常に動作した。詳しくは下記を参照すると良い。</p>

<p><a href="http://d.hatena.ne.jp/InvokeTwoA/20120131">http://d.hatena.ne.jp/InvokeTwoA/20120131</a></p>

<p>なるほど、true を false に変更すると機能が切り離される。ユーザーのロールの判別は、lib/chanko/active_if/active_if.rb に Chanko::ActiveIf.define で定義したモノを、active_if で利用するんですねー。と、まぁ、Chanko の一部機能を理解するだけで、ほぼ終わってしまいました・・・。</p>

<h3>感想</h3>

<p>そもそも、自分はコードリーディング自体をそんなにやってない為、どう進めるべきかも分からずで。慣れてる人が居れば、少しは違った結果になったかもしれん。自分のレベルの低さが露呈したな。</p>

<p>あんまりインプット出来なくて悔しい思いはしたが、収穫はあった。まず、自分は想像以上に Ruby 分かってねーなー！という事。なんとなーくしか、ソースが追えない。これはイカン。もっと、ソースコード読まねば！という思いに駆られた事は収穫。これを機に Chanko を読み進めてみるかと思ったら、既に <a href="http://a-newcomer.com/tags/chanko/">エントリー</a> が挙がっていましたね。慣れない内は、このエントリーを見ながらお勉強っすね。</p>

<h2>LT 大会</h2>

<p>さて、途中で LT もありました。</p>

<h3><a href="http://twitter.com/kyanny">@kyanny</a> さんによる Remaze と Sequel のお話し。</h3>

<p>詳しくは、ご本人の <a href="http://blog.kyanny.me/entry/2012/02/16/004715">エントリー</a> を参照。Remaze の存在すら知りませんでしたね。Sequel は何かの参考書に記述があったような気が。とにかく、どちらも手軽そうな感じですね。</p>

<h3><a href="http://twitter.com/joker1007">@joker1007</a> さんによる pry なお話し。</h3>

<p>詳しくは、ご本人の <a href="http://d.hatena.ne.jp/joker1007/20120215/1329327751">エントリー</a> を参照。pry 良いですよね。なんで今までこーゆーの無かったのか不思議なくらいに便利。</p>

<h2>まとめ</h2>

<p>最後に、懇親会にも参加しましたが、皆色々と詳しくてスゲーなー！の一言。最近、業務でゴリゴリとコード書いてる訳でも無いし、差があって当然なんだけど。でも、逆にそれが刺激になって楽しい。そして、@tyabe さんが同じ大学出身で同じ年齢で、同じキャンパスに居たという事実に驚いた。多分、一度くらいスレ違ってるだろうなー。</p>

<p>とても良い刺激になったので、また次回、Shibuya.rb に参加してみたいと思う。</p>
]]></content>
  </entry>
  
</feed>
