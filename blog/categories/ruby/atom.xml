<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | SCRABBLE&#9734;NOTE]]></title>
  <link href="http://fakestarbaby.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://fakestarbaby.github.io/"/>
  <updated>2013-06-01T01:39:56+09:00</updated>
  <id>http://fakestarbaby.github.io/</id>
  <author>
    <name><![CDATA[fakestarbaby]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shibuya.rbに初参加したよ！]]></title>
    <link href="http://fakestarbaby.github.io/blog/2012/02/16/shibuyarb/"/>
    <updated>2012-02-16T21:34:00+09:00</updated>
    <id>http://fakestarbaby.github.io/blog/2012/02/16/shibuyarb</id>
    <content type="html"><![CDATA[<p>2012/02/15(水)に VOYAGE GROUP さんで開催された、Shibuya.rb に初参加した。</p>

<h2>ソースコードリーディング</h2>

<p>今回は Rack ミドルウェアのソースコードリーディングというテーマで。おっと、そもそも、Rack について詳しく知らないなーって思って、基礎知識は学習した上で望んだ。</p>

<!-- more -->


<h2>Chanko</h2>

<p>クックパッドさんが提供している <a href="https://github.com/cookpad/chanko">Chanko</a> のソースコードを読むチームへ参加した。Chanko は新機能を既存コードから出来るだけ切り離した状態で、本番環境にてユーザーのロールによって有効化、無効化を簡単に制御出来る。本番環境で試せるってのはメリットあるなと思う。</p>

<p>チーム内には、そもそも、Chanko がどういったモノなのか理解している人が居なかったので、まずは、Chanko を利用して作られている <a href="https://github.com/cookpad/chanko_sample">サンプル</a> を動かしてみよう！って事になった。</p>

<p>で、皆でローカルへ持ってきて動かしてみたんだけど、なんかログがダーっ！とスゴイ勢いで流れて不穏な雰囲気。でも、なんとなく画面は表示された。Chanko の README を読めば分かるが、active_if というメソッド内で機能の有効化、無効化が出来る。このサンプルではデフォルトで true になっている為、機能が有効になるじはずだが、これが何故か有効にならない。どうも Rails のバージョンが3.2なのがマズイらしく、3.1に落として実行すると正常に動作した。詳しくは下記を参照すると良い。</p>

<p><a href="http://d.hatena.ne.jp/InvokeTwoA/20120131">http://d.hatena.ne.jp/InvokeTwoA/20120131</a></p>

<p>なるほど、true を false に変更すると機能が切り離される。ユーザーのロールの判別は、lib/chanko/active_if/active_if.rb に Chanko::ActiveIf.define で定義したモノを、active_if で利用するんですねー。と、まぁ、Chanko の一部機能を理解するだけで、ほぼ終わってしまいました・・・。</p>

<h3>感想</h3>

<p>そもそも、自分はコードリーディング自体をそんなにやってない為、どう進めるべきかも分からずで。慣れてる人が居れば、少しは違った結果になったかもしれん。自分のレベルの低さが露呈したな。</p>

<p>あんまりインプット出来なくて悔しい思いはしたが、収穫はあった。まず、自分は想像以上に Ruby 分かってねーなー！という事。なんとなーくしか、ソースが追えない。これはイカン。もっと、ソースコード読まねば！という思いに駆られた事は収穫。これを機に Chanko を読み進めてみるかと思ったら、既に <a href="http://a-newcomer.com/tags/chanko/">エントリー</a> が挙がっていましたね。慣れない内は、このエントリーを見ながらお勉強っすね。</p>

<h2>LT 大会</h2>

<p>さて、途中で LT もありました。</p>

<h3><a href="http://twitter.com/kyanny">@kyanny</a> さんによる Remaze と Sequel のお話し。</h3>

<p>詳しくは、ご本人の <a href="http://blog.kyanny.me/entry/2012/02/16/004715">エントリー</a> を参照。Remaze の存在すら知りませんでしたね。Sequel は何かの参考書に記述があったような気が。とにかく、どちらも手軽そうな感じですね。</p>

<h3><a href="http://twitter.com/joker1007">@joker1007</a> さんによる pry なお話し。</h3>

<p>詳しくは、ご本人の <a href="http://d.hatena.ne.jp/joker1007/20120215/1329327751">エントリー</a> を参照。pry 良いですよね。なんで今までこーゆーの無かったのか不思議なくらいに便利。</p>

<h2>まとめ</h2>

<p>最後に、懇親会にも参加しましたが、皆色々と詳しくてスゲーなー！の一言。最近、業務でゴリゴリとコード書いてる訳でも無いし、差があって当然なんだけど。でも、逆にそれが刺激になって楽しい。そして、@tyabe さんが同じ大学出身で同じ年齢で、同じキャンパスに居たという事実に驚いた。多分、一度くらいスレ違ってるだろうなー。</p>

<p>とても良い刺激になったので、また次回、Shibuya.rb に参加してみたいと思う。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby東京プレゼンテーション2012に参加した！]]></title>
    <link href="http://fakestarbaby.github.io/blog/2012/02/04/ruby-tokyo-presentaion-2012/"/>
    <updated>2012-02-04T21:20:00+09:00</updated>
    <id>http://fakestarbaby.github.io/blog/2012/02/04/ruby-tokyo-presentaion-2012</id>
    <content type="html"><![CDATA[<p>2012/02/03(金)に、秋葉原で開催された Ruby 東京プレゼンテーション2012に参加した。Ruby とは？というエンジニア向けの突っ込んだ内容ではなく、Ruby を取り巻く環境について、現在どうなっているのか、今後どうなって行くのか。Ruby を切り口として、色々と新しいビジネスを発見する場として提供された感じでしたね。</p>

<h2>感想</h2>

<p>一言で全体的な感想を言えば、う～ん・・・という感じだった。特にビジネス寄りのセッションは。多分、俺はメインターゲットじゃなかったんだろう・・・企業同士がコネクションを作る場だな、きっと。スーツ率も超高めだったし、完全アウェーだった。</p>

<p>登壇される方々のメンツもスゴかったのだが、如何せん、自己紹介タイムが長い。これだけで20分くらい使って、テーマに沿って議論するという本質的な時間もあんまり取れなくて残念だった。テーマ設定も大き過ぎるし、その割に議論する時間も少なかったしね。</p>

<!-- more -->


<h2>なぜ、Ruby か。</h2>

<p>これは開発コストが削減出来るからっていうのが多かった気がする。PHP や Java、Ruby を初心者に教えて、全く同じ仕様のモノを作らせたら、Ruby の開発コストだけ約半分だったそうな。それだけ、開発コストを抑えられるって、Ruby スゲーな！って思った。でも、俺はエンジニアなので、「開発コストが下がるぜ！」よりも先に「いや、楽しい～！」が来る。やっぱり、見ている視点が違うのかなーって感じた。</p>

<p>現状、Ruby は色々な業界で実際に使われ始めていて、今年からは Ruby が特別じゃなくなるんじゃないか？と話していた。Java みたいに定着して、どんどん Ruby が流行ると良いっすね。</p>

<h2>軽量 Ruby</h2>

<p>後は、軽量 Ruby に少し未来を感じた。今年にはオープンソース化されるそうだが、現在開発中の軽量 Ruby を実際に使って、どこまで組み込み可能なのか、研究をした結果の発表を見た。ヒーターを iPad から遠隔操作でオンオフしたり、自販機のランプ点灯を制御したり、ルーターからツイートしたり。全て組み込み部分に軽量 Ruby が使用されていた。</p>

<p>大学卒業して最初に入った案件が C による組み込み系だったんだけど、まさか、それを Ruby で書ける日が来るなんて、ちょっと信じられない。まだまだ、これからって感じはするけど、Ruby の新しい未来を感じられた。Ruby が出来れば、WEB も組み込みも両方イケちゃいます！そんな未来が来るのかなーなんて。</p>

<h2>LT</h2>

<p>最後の LT は、Heroku、DoorKeeper が良かったかな。おー、やっと自分に関連する領域が来た！みたいな、「gem」って言葉、今日初めて聞いたぜ！みたいな感じ。</p>

<h2>まとめ</h2>

<p>色んな広告というか、宣伝的な部分も多かったので、半日割いて行く価値があるかと言うと、俺は完全に対象外だったな。こればっかりは行ってみないと分からないんだけど・・・。でも、ビジネス的なコネクションを作りたい人には良いかもね。</p>

<p>という訳で、Ruby の未来を感じた半日でした！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[記念すべき第1回 Shinjuku.rb に参加したよ！]]></title>
    <link href="http://fakestarbaby.github.io/blog/2012/02/01/shinjukurb/"/>
    <updated>2012-02-01T21:08:00+09:00</updated>
    <id>http://fakestarbaby.github.io/blog/2012/02/01/shinjukurb</id>
    <content type="html"><![CDATA[<p>2012年1月に立ち上がったばかりの Shinjuku.rb 第1回に参加して来ました！</p>

<p>そもそも、Ruby コミュニティに顔を出す事自体が初めてだったので、どんな雰囲気なんだろーとか思ってたんだけど、結構楽しかったですね。</p>

<!-- more -->


<h2>LT 大会</h2>

<p>最初は、LT から。</p>

<h3><a href="http://twitter.com/tatsuoSakurai">@tatsuoSakurai</a>さん</h3>

<p>関東近郊の Ruby コミュニティのご紹介でした。自分が知らないだけだと思うけど、結構あるなーと感じた。</p>

<h3><a href="http://twitter.com/mewlist">@mewlist</a>さん</h3>

<p>Gem を作りたいって話し。あれ作ろう、これ作ろうと思って探し始めると大抵あるよね。Ruby や Rails やり始めてから、ほとんど自前でライブラリ書かなくなった気がする。</p>

<h3><a href="http://twitter.com/ckazu">@ckazu</a>さん</h3>

<p>素人が Rails 開発をするまでの実体験。適切な時期に適切な部分を勉強すると、無理なく自分に落とし込めるそうな。確かに・・・・特に必要とされない時期にインプットしてもすぐ忘れるよね。これから、Rails 開発を始めてみたいと思っている人とかにも分かりやすい説明でしたね。</p>

<h3><a href="http://twitter.com/jugyo">@jugyo</a>さん</h3>

<p>自作プラグイン osx_dict のご紹介でした。MacOS X の辞書でリファレンスを高速で引けるのだが、この辞書を自作するプラグインとの事。辞書でリファレンスを引くのは、以前自分も試した事があるけど実運用出来てない。ちょっと、時間がある時にでも試してみたいと思った。</p>

<h3><a href="http://twitter.com/udzura">@udzura</a>さん</h3>

<p>Sinatra の薄い本「Sinatra &ndash; Up and running」のご紹介でした。実際に書籍を持ち込んでくれたのですが、本当に薄い。Sinatra 自体、そんなに書籍も出てないし、メインコミッターの人が著者なのでオススメらしい。</p>

<h2>Rails3 レシピブック読書会</h2>

<h3>RVM でハマる</h3>

<p>後半戦は、Rails3 レシピブックを皆で読み進めるって流れになったのだが、RVM のインストール辺りで、コマンドのヘルプを細かく見て行った為に、Rails のインストールまでも行かなかった。でも、ぶっちゃけ、必要に迫られなければ、あそこまでヘルプを見る事も無かっただろうし、知らずに損する事も実は多そうだなーって感じた。</p>

<h3>RVM is Ruby enViroment Manager</h3>

<p>RVM って Ruby Version Manager だと勝手に思い込んでいたのだが、どうやら、最近になって Ruby enViroment Manager の略称に変わったらしいという事に皆で気付いた。確かに、Ruby だけじゃなく、Gemset の管理もしてますし・・・でも、結構無理がある感じが面白い。</p>

<h2>まとめ</h2>

<p>全体として、ゆる～い感じの勉強会の為、Ruby や Rails はこれからだぜ！って人にもオススメかなーと。また、次回都合が付けば行きたいと思います。</p>
]]></content>
  </entry>
  
</feed>
